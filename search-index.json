[{"title":"常见函数Laplace变换表","date":"2025-03-29T13:09:06.000Z","url":"/posts/laplace-transform-table/","tags":[["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["数学","/categories/%E6%95%B0%E5%AD%A6/"]],"content":" f(t) F(s) 1 , n=1,2,3... , p&gt;-1 , n=1,2,3... , n=1,2,3... , n=1,2,3... (Convolution) "},{"title":"ROS1与机器人仿真学习","date":"2025-03-18T17:21:27.000Z","url":"/posts/ros-robotics-learning/","tags":[["控制","/tags/%E6%8E%A7%E5%88%B6/"],["机器人","/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"]],"categories":[["机器人","/categories/%E6%9C%BA%E5%99%A8%E4%BA%BA/"]],"content":"快捷导航 ROS官方urdf教程： 常用指令 tf部分 发布static transform 例如： 可以看到： 以及： 使用launch文件发布的方式： "},{"title":"在windows上挂载ext4硬盘——使用WSL2","date":"2025-03-11T16:00:08.000Z","url":"/posts/wsl2-removable-ext4-disk-mount/","tags":[["linux","/tags/linux/"],["ext4","/tags/ext4/"]],"categories":[["Linux","/categories/Linux/"]],"content":"找到硬盘对应的ID 在管理员powershell中输入： 得到如下内容： 这里的\\\\.\\PHYSICALDRIVE1就是我们的移动硬盘。 挂载硬盘 首先进入我们的WSL2中，输入lsblk，出现如下： 这里的sdd就是我们的移动硬盘，接着在windows的管理员powershell里输入： 注意这里的\\\\.\\PHYSICALDRIVE1是我们刚才找到的硬盘ID，--partition 3是指我们要挂载的分区，对应刚才的sdd3。 随后我们就能在wsl2的/mnt/wsl/PHYSICALDRIVE1p3下找到我们的硬盘了，甚至可以在win11的文件管理器中直接访问。 "},{"title":"命令行启动Chrome出现\"Choose password for new keyring\"的解决方法","date":"2025-03-09T15:25:18.000Z","url":"/posts/commandline-chrome-choose-password-for-new-keyring/","tags":[["debug","/tags/debug/"]],"categories":[["Linux","/categories/Linux/"]],"content":"转自StackOverFlow: You can start chrome with the command line google-chrome --password-store=basic so that it won't ask use the gnome keyring. See: code.google.com/p/chromium/wiki/LinuxPasswordStorage Because there is a workaround that is specific to Chrome, this question should not be a duplicate. 在启动命令中加入参数--password-store=basic即可解决。"},{"title":"在windows下用docker安装homeassistant","date":"2025-03-08T14:00:00.000Z","url":"/posts/homeassistant-docker/","tags":[["硬件","/tags/%E7%A1%AC%E4%BB%B6/"],["docker","/tags/docker/"]],"categories":[["HA","/categories/HA/"]],"content":"第一步：创建配置文件目录 在安装 Home Assistant 之前，我们需要创建一个用于存放 Home Assistant 配置文件的目录。这个目录将映射到 Docker 容器中的 /config 目录。 打开文件资源管理器。 在 D: 盘创建一个名为 cache 的文件夹（如果不存在）。 在 cache 文件夹中创建一个名为 home-assistant-config 的文件夹。 最终的目录路径应该是：D:/cache/home-assistant-config 使用镜像站安装 命令详解： -d: 让容器以守护进程（后台）模式运行，这样你可以关闭终端而不影响容器的运行。 --name home-assistant: 指定容器的名称为 home-assistant，这使得管理容器时更加方便。 --restart unless-stopped: 配置容器在 Docker 重启时自动启动，除非你手动停止它。 -p 8123:8123: 将容器的内部端口 8123 映射到主机的 8123 端口。这样你可以通过浏览器访问  来使用 Home Assistant。 -v D:-assistant-config:/config: 将 Windows 的 D:-assistant-config 目录映射到容器内的 /config 目录，Home Assistant 将在这个目录中存储配置文件。 homeassistant/home-assistant:latest: 使用 Home Assistant 的最新 Docker 镜像来创建容器。 访问 Home Assistant 在 Docker 容器成功启动后，你可以通过浏览器访问 Home Assistant 的 Web 界面。 打开你的浏览器（如 Chrome、Edge）。 在地址栏中输入 。 你将看到 Home Assistant 的欢迎界面。按照页面上的提示，完成初始设置。"},{"title":"嵌入式Linux系统镜像制作（基于SD卡）","date":"2025-02-28T07:15:49.000Z","url":"/posts/package-sdcard-image/","tags":[["硬件","/tags/%E7%A1%AC%E4%BB%B6/"],["RK3588","/tags/RK3588/"],["嵌入式","/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"]],"categories":[["嵌入式","/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"]],"content":"最近在给客户做一个大屏展示的项目，需要单板机开机就大屏显示一个网页，但配置环境非常困难，因此选择了直接打包系统镜像烧录在sd卡中，将sd卡直接给到客户，本文记录一下在linux主机上对sd卡打包镜像的过程。 准备工作 1、一台linux PC 2、树莓派SD卡 3、读卡器 减小sd卡没有使用的空间 使用GParted将sd卡中最大的分区缩减，让空间尽可能小，这样打包出来的镜像也会小一些。 先在右上角选择我们的sd卡，然后右键/dev/sdb1分区，选择resize/move，将空间缩小一些。我的图片中是已经缩小过的。 然后我们计算sd卡中存在数据的前半部分的大小，例如我的是： 16.00 MiB + 9.87 GiB &lt; 10240MiB 然后我们记住这个10240MiB，我们将在下一步使用。 开始备份 输出： 这里的if是输入文件，我们的sd卡是/dev/sdb，of是输出文件，我们的输出文件是sdcard.bin，bs是每次读写的大小，count是读写的次数，status=progress是显示进度。bs是每次复制的大小，这里设为1MiB，count设置为10240是因为我们只需要备份前10240MiB的数据。 随后我们就得到了一个sdcard.bin的文件，这个文件就是我们的sd卡的镜像。我们可以使用BalenaEtcher软件烧写这个镜像。"},{"title":"AU3517工程实践与科技创新Ⅳ-E","date":"2025-02-20T10:19:25.000Z","url":"/posts/au3517-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"Week1, Class1, 2025.2.20 课程实践作业： 1-2人完成 实验总结报告80%（实验报告+实验代码+实验录像） 亮点表现10%（亮点算法、算法先进程度、算法完成度） 个人贡献10% 作业要求： 报告 TXT代码 视频 头歌平台完成任务"},{"title":"AU3315倒立摆课程设计","date":"2025-02-20T06:03:16.000Z","url":"/posts/au3315-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"Week1, Class1, 2025.2.20 评分标准： - 实验报告 50% - 实验操作 20% 报告要求： 实验报告要目标明确，步骤清晰、内容详实 内容要求： 实验设计的具体步骤、实验数据记录、系统参数求解等 控制算法设计思路、理论推导步骤、仿真结果、结果分析等 实验或仿真中遇到的困难及解决的办法 课程体会与建议 纸质报告、双面打印、字号五号、单栏排列 DDL：2025.4.10下午课堂时间"},{"title":"AU3311现代控制理论（B类）","date":"2025-02-20T02:03:06.000Z","url":"/posts/au3311-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"2025.2.20 教材： 施颂椒，陈学中，杜秀华. 《现代控制理论基础》，高等教育出版社，第二版 参考书： 张嗣瀛，高立群. 《现代控制理论》，清华大学出版社，第二版 英文参考书：线性系统理论 课程主要内容（不严格按照课本内容讲述）： 状态空间描述 线性系统的响应 Lyapunov稳定性 能控性和能观性 系统的实现 状态反馈与状态反馈器 考核方式： 平时作业（20%）迟交一周分数0.8，迟交两周分数0.80.8，期末前交0.4，期末后计0分 课堂参与（10%）签了一次到就是满分 期末闭卷（70%） 王召建老师：wangzhaojian@sjtu.edu.cn 助教李明：liming0219@sjtu.edu.cn 交流时间：电院2-430，每周五下午，16:00-17:00，有问题可随时联系 2025.3.13 传递函数与传递函数矩阵 对于线性定常系统，有状态空间描述： 对线性定常系统状态空间描述作拉氏变换，并假设，可得： 整理后可得： 零初始条件下 ，有： 系统的传递函数矩阵： 其中求逆的部分如下： 使用伴随矩阵（Adjugate Matrix）求逆矩阵的步骤如下： 计算行列式 (det(A))：确保矩阵可逆（行列式不为零）。 求余子式矩阵：对每个元素计算其对应的余子式（去掉所在行和列的2x2行列式）。 构造余因子矩阵：将余子式乘以符号因子 。 转置余因子矩阵得到伴随矩阵 (adj(A))。 逆矩阵公式：。 举例：矩阵 计算行列式： 余子式矩阵： 余因子矩阵（应用符号）： 伴随矩阵（转置余因子矩阵）： 逆矩阵（因 ）： 验证：计算 得到单位矩阵，确认正确性。 最终答案： 例题： 已知系统的状态空间表达式如下，求其对应的传递函数矩阵。 解答： 用刚才的方法求逆矩阵，得到 ： 进行一个复杂的矩阵相乘得到： "},{"title":"AI3702移动机器人","date":"2025-02-19T00:05:06.000Z","url":"/posts/ai3702-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"Week1, Class1, 2025.2.19 课程安排： 分数组成： - 随堂测试+课后作业 20% - Project 30% - 子任务1：运动学 5分 - 子任务2：路径规划 10分 - 子任务3：定位与导航 15分 - 编程作业+答辩报告 - 3+人一组 - 期末考试 50% 随堂考、笔试、闭卷 对本课程的意见或建议（问卷匿名且长期有效） 大作业环境配置云盘链接： Week1, Class2, 2025.2.21 第二周周三携带电脑配置ros环境。"},{"title":"AU3308过程控制系统","date":"2025-02-19T00:05:06.000Z","url":"/posts/au3308-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"2025.2.19 分数组成： 课堂小测试 20% 课堂参与度 10% 课后作业 10% 期末考试 60% 考题分布： 填空题（15分） 选择题（可多选）12分 计算题（10分） 分析计算题（比计算题难，先分析再计算）（20分） 设计两种不同的控制策略来控制一个过程（18分） 两类控制目标：设定值跟踪控制、抗干扰控制 系统四个基本组成：传感器、控制器、执行器、被控对象 过控系统六大被控变量：温度、压力、流量、液位、成分、物性 过控系统的三个主要设计目标：安全性、稳定性、经济性 过控系统的性能指标：稳定性、快速性和准确性 example: 马桶控制系统 2025.3.10 建模的基本方法 白箱方法---解析法（机理演绎法） 黑箱方法---实验辨识法（系统辨识与参数估计方法） 灰箱方法---解析法与实验辨识相结合的混合方法 实验辨识法的注意事项： 测试系统的非线性，选择近似线性区域 测试的输入信号要尽可能完美（例如标准阶跃响应输入） 采集数据要从稳态开始，最后也要保持稳态 输出信号变化要足够大（信噪比&gt;5，10%变化） 多次采集 参数辨识方法： 作图法 两点法 最小二乘法"},{"title":"AU3310计算机控制技术","date":"2025-02-18T03:14:44.000Z","url":"/posts/au3310-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"Lecture 1: Introduction to Computer Control Technology 课程介绍 Week 1, Class 1, 2025.2.18 Lecture 1: Introduction to Computer Control Technology 朱善迎 shyzhu@sjtu.edu.cn 微信号s14528707 Wang Shuling(王淑玲), PhD student Wechat ID: wsl17862707921 E-mail: shulingwang2021_sjtu@sjtu.edu.cn Duan Mengmeng(段萌萌), PhD student Wechat ID: hhhoneybiubiu E-mail: duan_mm@sjtu.edu.cn 课本： C. L. Phillips, H. T. Nagle, A. Chakrabortty, Digital Control System Analysisand Design, 4th ed. Boston: Pearson, 2015 Genke Yang, Jianying Xie, Micro-computer Control Technology, 4th ed. Changsha:National Defense Industry Press, 2016 (in Chinese) 分数组成： 20% homework assignments 10% group project（3人） 10% attendance &amp; pop-up quizzes 60% final exam 无反馈控制系统 2025.2.25 系统： 控制器： 特点：控制器可能无法实现、对干扰的敏感程度高，对系统参数的敏感程度高 Lecture 2 Feedback Principles 2025.03.29 使用反馈控制系统的原因： 实际中很难获得精确的系统数学模型 系统会有扰动 使用反馈的两大目的： 设定值跟踪（Servo Problem） 抗扰动能力（Regulation Problem） Lecture 3 Sampling and Reconstruction 2025.03.30 A/D&amp;D/A转换器 FSR 代表 \"Full-Scale Range\"（满量程范围）。 其中 是用于表示信号的位数。这个公式帮助确定每个量化级别之间的间隔大小。 截断(Truncation)与四舍五入(Round-off)，计控中一般用后者，误差为前者的1/2. “quantization levels”（量化级）是指在进行模拟到数字转换时，将连续的模拟信号划分为若干个离散的等级或层次。这些等级的数量由 表示。一般要求： Weighted adder D/A 加权加法数模转换器 输入的数字： 简化后的模型： 其中的xR代表并联的电阻： 计算得到 从而得到输出电压： 其中 优缺点：设计简单，但在同一集成电路芯片上精确制造出宽范围的电阻值是不可能的。 Example1： 套公式得到： R-2R resistive-ladder D/A R-2R电阻梯形数模转换器 的计算： 可以观察到下面整体的等效电阻为，所以总电流有： 然后流入的电流为： 因此输出电压为： 其中 优缺点：仅使用两种电阻值，即𝑅和2𝑅，这使得制造和集成变得简单且精确。 Successive-approximation A/D 逐次逼近式模数转换器 Example2： Let’s take a specific example of a 4-bit successive A/D conversion. Assume the D/A converter has and. Determine the digital output for the input voltage 5.1 V and the quantization error. solution: so the digital output is quantization error: Dual-slope A/D converter 双斜坡模数转换器 原理：S1打开固定的时间数n1充电，然后测量S2打开的时间数n2放电，得到关系： 就是数字量化的结果。 优点：非常准确，不依赖电阻和电容的值或者时钟周期，积分过程还能滤除噪音。 缺点：速度慢，需要个时钟周期 Flash A/D Flash A/D Converter（闪存模数转换器）是一种非常快速的模数转换技术，它通过并行比较多个电压级别来确定输入模拟信号的数字值。 优点:非常高的速度，通常不需要采样、保持电路 缺点:对于宽位转换来说非常昂贵，准确度受电阻链准确度的限制"},{"title":"AU3324运动控制系统","date":"2025-02-18T03:14:44.000Z","url":"/posts/au3324-notes/","tags":[["笔记","/tags/%E7%AC%94%E8%AE%B0/"],["自动化","/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"],["控制","/tags/%E6%8E%A7%E5%88%B6/"]],"categories":[["自动化课程","/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%BE%E7%A8%8B/"]],"content":"Week 1, Class 1, 2025.2.18 教材： 《运动控制系统》 Week 1, Class 2, 2025.2.21"},{"title":"yolo报错'torchvision::nms' is only available for these backends","date":"2024-12-08T07:13:11.000Z","url":"/posts/yolo-error-with-cuda/","tags":[["编程","/tags/%E7%BC%96%E7%A8%8B/"],["深度学习","/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"],["目标检测","/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"]],"categories":[["深度学习","/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"]],"content":"我的环境 问题原因： 安装了cuda版本过高的torch 解决方法： 卸载当前的torch 安装较低版本的torch和torchvision (cu118) 完整的报错信息： "},{"title":"在PlatformIO中编程STM32时使用DAPLink","date":"2024-12-05T07:19:21.000Z","url":"/posts/pio-stm32-daplink/","categories":[["undefined",""]],"content":"在PlatformIO中编程STM32时使用DAPLink 修改platformio.ini文件 即可直接upload"},{"title":"第一台itx主机","date":"2024-11-22T08:30:50.000Z","url":"/posts/my-itx-pc/","tags":[["硬件","/tags/%E7%A1%AC%E4%BB%B6/"],["装机","/tags/%E8%A3%85%E6%9C%BA/"]],"categories":[["硬件","/categories/%E7%A1%AC%E4%BB%B6/"]],"content":"在前面 一直有组装一台itx主机的想法，但因无处安放+有主力机的原因，一直没有实施。直到最近，导师在实验室给我安排了一个工位，看着空空如也的工位就诞生了装一台以美观为主的itx二奶机放在工位的想法。 配置选择 考虑到性价比和功耗，选择了amd的5600作为cpu，使用静粤的白色b550i主板，颜值不错。曾经用过E5-2640v3做cpu，空载功率就不小，不符合条件。内存选择了双8g，显卡暂时用RX580过渡。由于还想用这个itx机器实现nas的作用，所以买了一块12T的机械硬盘，装系统的盘是Gudga的1T nvme。机箱选择了机械大师的G40，体积4L，十分迷你。 配件 型号 购买渠道 价格 主板 精粤b550i gaming 闲鱼 320元 内存 宇瞻8g*2 3200 闲鱼 125元 CPU 5600 闲鱼 488元 硬盘1 固德佳1T 闲鱼 248元 硬盘2 希捷银河12T 拼多多 556元 显卡 RX588 单风扇 拼多多 336元 电源 flex白小1u400w 拼多多 131元 WiFi天线 8db增益白 拼多多 6.8元 网卡 ax210 拼多多 68.3元 机箱 机械大叔G40 拼多多 119元 风扇 冰蝶9015白 ARGB*2 拼多多 40元 CPU散热 冰蝶下压ARGB 拼多多 68元 PCIe3.0延长线 白 双反 18.5cm 拼多多 29.9元 合计 2536元 组装过程 请出我们的5600，最后一代有针脚的amd cpu 然后是白白的静粤小主板 和散热器装在一块 三朝元老580 把电源、风扇、硬盘之类的装好就可以啦 "},{"date":"2025-03-29T12:51:54.382Z","url":"/comments/gitalk.css","categories":[["undefined",""]],"content":".gt-counts, .gt-header-textarea, .gt-user-name { color: var(--kr-theme-text) !important; } .gt-header-textarea, .gt-header-preview, .gt-btn-preview, .gt-comment-content, .gt-popup { background-color: var(--kr-theme-page-bg) !important; } .gt-popup { border-color: #6190e8 !important; } .gt-header-textarea { background: url(\"\") right bottom no-repeat; }"},{"date":"2025-03-29T12:51:54.382Z","url":"/comments/waline.css","categories":[["undefined",""]],"content":"#w-comments .wl-reaction-list { gap: 24px; } #w-comments .wl-reaction-img { width: 72px; height: 72px; } #w-comments .wl-reaction-votes { font-size: 1em; }"},{"date":"2025-03-29T12:51:54.382Z","url":"/comments/gitalk.js","categories":[["undefined",""]],"content":"(() => { const loadComments = async () => { if (typeof Gitalk === \"undefined\") { // 还未就绪，等一会再试试吧 setTimeout(loadComments, 100); } else { // 准备好了，开始加载 const container = document.getElementById('gitalk-container'); if (!container) { // 没有容器 return; } const path = container.getAttribute(\"data-path\"); const gitalk = new Gitalk(Object.assign({ id: path, path: path, }, { clientID: 'Ov23liGnEdBwPWVcjrhX', clientSecret: '2b49aecf6954dd58dd7018d417f8a7155105c8b0', repo: \"dondaha.github.io\", owner: \"dondaha\", admin: [\"dondaha\"], distractionFreeMode: false, })); gitalk.render('gitalk-container'); } }; window.loadComments = loadComments; window.addEventListener('pjax:success', () => { window.loadComments = loadComments; }); })();"},{"date":"2025-03-29T12:51:54.382Z","url":"/comments/waline.js","categories":[["undefined",""]],"content":"import { init, commentCount } from ''; import { pageviewCount } from ''; (() => { const serverURL = ''; let firstVisit = true; const loadComments = async () => { const container = document.getElementById('w-comments'); if (!!container) { // 是文章或页面，完整加载 Waline const path = container.getAttribute(\"data-path\"); init({ el: container, path, dark: 'html[data-theme=\"dark\"]', serverURL, pageview: true, comment: true, }); } else { // 是首页，只展示页面访问和评论数量，不渲染评论区 pageviewCount({ serverURL, update: false, }); commentCount({ serverURL, }); } if (firstVisit) { // 站点的访问统计，仅生效一次 firstVisit = false; pageviewCount({ serverURL, path: \"/index.html\", }); } }; window.loadComments = loadComments; window.addEventListener('pjax:success', () => { window.loadComments = loadComments; }); })();"}]